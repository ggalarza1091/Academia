
package academia;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Tavo
 */
public class Insertar_Servicio extends javax.swing.JFrame {
    Connection con;
    int tabla;
    ImageIcon imagen = new ImageIcon("Icono.gif");
    Image icono = imagen.getImage();
    boolean seleccion;
    public Insertar_Servicio() {
        initComponents();
        this.setTitle("Insertar Servicio");
        DefaultTableModel Salones = new DefaultTableModel();
        Salones.addColumn("Codigo");
        Salones.addColumn("Piso");
        Salones.addColumn("Capacidad");
        tblSalon.setModel(Salones);
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con=DriverManager.getConnection("jdbc:odbc:conexion");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"ERROR EN LA CONEXION","ERROR",JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Insertar_Salones.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setIconImage(icono);
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        lblServicio = new javax.swing.JLabel();
        txtNombreServicio = new javax.swing.JTextField();
        lblFechaInicio = new javax.swing.JLabel();
        lblFechaTermino = new javax.swing.JLabel();
        txtFechaInicio3 = new javax.swing.JTextField();
        txtFechaTermino3 = new javax.swing.JTextField();
        cbxServicio = new javax.swing.JComboBox();
        lblSalon = new javax.swing.JLabel();
        btnSeleccionar = new javax.swing.JButton();
        lblNivelAcademico = new javax.swing.JLabel();
        cbxNivelAcademico = new javax.swing.JComboBox();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        lblEj = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        lblNombreCiclo = new javax.swing.JLabel();
        txtFechaInicio1 = new javax.swing.JTextField();
        txtFechaInicio2 = new javax.swing.JTextField();
        txtFechaTermino2 = new javax.swing.JTextField();
        txtFechaTermino1 = new javax.swing.JTextField();
        sclSalon = new javax.swing.JScrollPane();
        tblSalon = new javax.swing.JTable();
        lblEntrada = new javax.swing.JLabel();
        lblSalida = new javax.swing.JLabel();
        txtEntrada = new javax.swing.JTextField();
        txtSalida = new javax.swing.JTextField();
        cbxEntrada = new javax.swing.JComboBox();
        cbxSalida = new javax.swing.JComboBox();
        btnHorario = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblMatricula = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLayeredPane1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLayeredPane1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/InsertarCiclo.png"))); // NOI18N
        jLabel1.setBounds(100, 10, 380, 50);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblServicio.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblServicio.setForeground(new java.awt.Color(255, 255, 255));
        lblServicio.setText("Servicio:");
        lblServicio.setBounds(60, 80, 60, 20);
        jLayeredPane1.add(lblServicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtNombreServicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreServicioKeyReleased(evt);
            }
        });
        txtNombreServicio.setBounds(200, 100, 160, 30);
        jLayeredPane1.add(txtNombreServicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblFechaInicio.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblFechaInicio.setForeground(new java.awt.Color(255, 255, 255));
        lblFechaInicio.setText("Fecha de Inicio:");
        lblFechaInicio.setBounds(60, 200, 110, 20);
        jLayeredPane1.add(lblFechaInicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblFechaTermino.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblFechaTermino.setForeground(new java.awt.Color(255, 255, 255));
        lblFechaTermino.setText("Fecha de Termino:");
        lblFechaTermino.setBounds(60, 230, 120, 20);
        jLayeredPane1.add(lblFechaTermino, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtFechaInicio3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaInicio3FocusLost(evt);
            }
        });
        txtFechaInicio3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFechaInicio3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaInicio3KeyTyped(evt);
            }
        });
        txtFechaInicio3.setBounds(300, 190, 60, 30);
        jLayeredPane1.add(txtFechaInicio3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtFechaTermino3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaTermino3FocusLost(evt);
            }
        });
        txtFechaTermino3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFechaTermino3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaTermino3KeyTyped(evt);
            }
        });
        txtFechaTermino3.setBounds(300, 220, 60, 30);
        jLayeredPane1.add(txtFechaTermino3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cbxServicio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Uno", "Academia", "Asesoria(DEATRE)" }));
        cbxServicio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxServicioItemStateChanged(evt);
            }
        });
        cbxServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxServicioActionPerformed(evt);
            }
        });
        cbxServicio.setBounds(200, 70, 160, 30);
        jLayeredPane1.add(cbxServicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblSalon.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblSalon.setForeground(new java.awt.Color(255, 255, 255));
        lblSalon.setText("Salon:");
        lblSalon.setBounds(60, 270, 60, 20);
        jLayeredPane1.add(lblSalon, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnSeleccionar.setText("Salones");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });
        btnSeleccionar.setBounds(440, 230, 100, 30);
        jLayeredPane1.add(btnSeleccionar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblNivelAcademico.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblNivelAcademico.setForeground(new java.awt.Color(255, 255, 255));
        lblNivelAcademico.setText("Nivel Academico:");
        lblNivelAcademico.setBounds(60, 200, 100, 20);
        jLayeredPane1.add(lblNivelAcademico, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cbxNivelAcademico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Uno", "Primaria", "Secundaria", "Pre-Universitario", "Universitario" }));
        cbxNivelAcademico.setBounds(200, 190, 160, 30);
        jLayeredPane1.add(cbxNivelAcademico, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblPrecio.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblPrecio.setForeground(new java.awt.Color(255, 255, 255));
        lblPrecio.setText("Precio:");
        lblPrecio.setBounds(60, 170, 50, 20);
        jLayeredPane1.add(lblPrecio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });
        txtPrecio.setBounds(200, 160, 160, 30);
        jLayeredPane1.add(txtPrecio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblEj.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblEj.setForeground(new java.awt.Color(255, 255, 255));
        lblEj.setText("Ej.: Semestral-UNI Turno 1");
        lblEj.setBounds(370, 110, 150, 20);
        jLayeredPane1.add(lblEj, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        btnRegistrar.setBounds(440, 270, 100, 30);
        jLayeredPane1.add(btnRegistrar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        btnSalir.setBounds(440, 310, 100, 30);
        jLayeredPane1.add(btnSalir, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblNombreCiclo.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblNombreCiclo.setForeground(new java.awt.Color(255, 255, 255));
        lblNombreCiclo.setText("Nombre del Ciclo:");
        lblNombreCiclo.setBounds(60, 110, 100, 20);
        jLayeredPane1.add(lblNombreCiclo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtFechaInicio1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaInicio1FocusLost(evt);
            }
        });
        txtFechaInicio1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFechaInicio1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaInicio1KeyTyped(evt);
            }
        });
        txtFechaInicio1.setBounds(200, 190, 40, 30);
        jLayeredPane1.add(txtFechaInicio1, javax.swing.JLayeredPane.PALETTE_LAYER);

        txtFechaInicio2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaInicio2FocusLost(evt);
            }
        });
        txtFechaInicio2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFechaInicio2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaInicio2KeyTyped(evt);
            }
        });
        txtFechaInicio2.setBounds(250, 190, 40, 30);
        jLayeredPane1.add(txtFechaInicio2, javax.swing.JLayeredPane.PALETTE_LAYER);

        txtFechaTermino2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaTermino2FocusLost(evt);
            }
        });
        txtFechaTermino2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFechaTermino2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaTermino2KeyTyped(evt);
            }
        });
        txtFechaTermino2.setBounds(250, 220, 40, 30);
        jLayeredPane1.add(txtFechaTermino2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtFechaTermino1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaTermino1FocusLost(evt);
            }
        });
        txtFechaTermino1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFechaTermino1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaTermino1KeyTyped(evt);
            }
        });
        txtFechaTermino1.setBounds(200, 220, 40, 30);
        jLayeredPane1.add(txtFechaTermino1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tblSalon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Piso", "Capacidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSalon.getTableHeader().setReorderingAllowed(false);
        sclSalon.setViewportView(tblSalon);
        tblSalon.getColumnModel().getColumn(0).setResizable(false);
        tblSalon.getColumnModel().getColumn(1).setResizable(false);
        tblSalon.getColumnModel().getColumn(2).setResizable(false);

        sclSalon.setBounds(140, 310, 280, 130);
        jLayeredPane1.add(sclSalon, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblEntrada.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblEntrada.setForeground(new java.awt.Color(255, 255, 255));
        lblEntrada.setText("Hora de Entrada:");
        lblEntrada.setBounds(60, 230, 120, 20);
        jLayeredPane1.add(lblEntrada, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblSalida.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblSalida.setForeground(new java.awt.Color(255, 255, 255));
        lblSalida.setText("Hora de Salida:");
        lblSalida.setBounds(60, 260, 90, 20);
        jLayeredPane1.add(lblSalida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEntradaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEntradaKeyTyped(evt);
            }
        });
        txtEntrada.setBounds(200, 230, 60, 30);
        jLayeredPane1.add(txtEntrada, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtSalida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSalidaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSalidaKeyTyped(evt);
            }
        });
        txtSalida.setBounds(200, 260, 60, 30);
        jLayeredPane1.add(txtSalida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cbxEntrada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "am", "pm" }));
        cbxEntrada.setBounds(280, 230, 60, 30);
        jLayeredPane1.add(cbxEntrada, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cbxSalida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "am", "pm" }));
        cbxSalida.setBounds(280, 260, 60, 30);
        jLayeredPane1.add(cbxSalida, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnHorario.setText("Editar Horario");
        btnHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHorarioActionPerformed(evt);
            }
        });
        btnHorario.setBounds(10, 310, 120, 40);
        jLayeredPane1.add(btnHorario, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/Fondos/15.jpg"))); // NOI18N
        jLabel2.setBounds(0, 0, 570, 460);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblMatricula.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblMatricula.setForeground(new java.awt.Color(255, 255, 255));
        lblMatricula.setText("Matricula:");
        lblMatricula.setBounds(60, 130, 80, 30);
        jLayeredPane1.add(lblMatricula, javax.swing.JLayeredPane.DRAG_LAYER);

        txtMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyTyped(evt);
            }
        });
        txtMatricula.setBounds(200, 130, 160, 30);
        jLayeredPane1.add(txtMatricula, javax.swing.JLayeredPane.DRAG_LAYER);

        jButton1.setText("Agregar Cursos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(10, 370, 120, 40);
        jLayeredPane1.add(jButton1, javax.swing.JLayeredPane.DRAG_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
    seleccion =true;
    Seleccionar_Salon x = new Seleccionar_Salon();
    x.setVisible(true);
}//GEN-LAST:event_btnSeleccionarActionPerformed

private void cbxServicioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxServicioItemStateChanged
    switch(cbxServicio.getSelectedIndex()){
        case 0:componentesvisibles(true,false,false);break;
        case 1:componentesvisibles(false,true,false);break;
        case 2:componentesvisibles(false,false,true);break;
    }
}//GEN-LAST:event_cbxServicioItemStateChanged

private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
    this.dispose();
}//GEN-LAST:event_btnSalirActionPerformed

private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        switch(cbxServicio.getSelectedIndex()){
            case 0:break;
            case 1:if(tblSalon.getRowCount()!=0&&verificarCampos(true)){
                       boolean respuesta=false;
                       String codigoacademico=registrarAcademico();
                       for(int i=0;i<tblSalon.getRowCount();i++){
                           respuesta=registrarSalones(codigoacademico,i);
                       }
                       if(respuesta){
                           JOptionPane.showMessageDialog(this,"Ciclo Academico Registrado Correctamente","Informacion",JOptionPane.INFORMATION_MESSAGE);
                       }
                   }
                    else{
                        if(verificarCampos(true))
                            JOptionPane.showMessageDialog(this,"Seleccione al menos un salon","Advertencia",JOptionPane.ERROR_MESSAGE);
                        if(verificarCampos(true)==false){
                            JOptionPane.showMessageDialog(this,"Campos Vacios o mal llenados","ERROR",JOptionPane.ERROR_MESSAGE);
                            if(tblSalon.getRowCount()==0)
                                    JOptionPane.showMessageDialog(this,"Seleccione al menos un salon","Advertencia",JOptionPane.ERROR_MESSAGE);
                        }
                   }
                   break;
            case 2:if(verificarCampos(true))
                    registrarAsesoria();
                   else
                    JOptionPane.showMessageDialog(this, "Campos Vacios o mal llenados","ERROR",JOptionPane.ERROR_MESSAGE);
                   break;
        }
    
    
}//GEN-LAST:event_btnRegistrarActionPerformed

private void jLayeredPane1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLayeredPane1AncestorAdded
    componentesvisibles(true,false,false);
}//GEN-LAST:event_jLayeredPane1AncestorAdded

    private void cbxServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxServicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxServicioActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        if(seleccion){
            DefaultTableModel Salones = new DefaultTableModel();
            Salones.addColumn("Codigo");
            Salones.addColumn("Piso");
            Salones.addColumn("Capacidad");
            try {
                for(int j=0;j<tabla;j++){
                    for(int k=0;k<3;k++){
                        tblSalon.setValueAt("",j,k);
                    }
                }
                String linea=null;
                int i=0;
                FileReader f = new FileReader("EnviarSalon.txt");
                BufferedReader b = new BufferedReader(f);
                while((linea=b.readLine())!=null){
                    StringTokenizer t = new StringTokenizer(linea,",");
                    if(Boolean.valueOf(t.nextToken())){
                        Object dato[] = new Object[3];    
                        dato[0]=t.nextToken();
                        dato[1]=t.nextToken();
                        dato[2]=t.nextToken();
                        Salones.addRow(dato);
                        i++;
                    }
                    else{
                        System.out.println(t.nextToken());
                        System.out.println(t.nextToken());
                        System.out.println(t.nextToken());
                    }
                }
                tabla=i;
                tblSalon.setModel(Salones);
                b.close();
            } catch (IOException ex) {}
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void txtNombreServicioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreServicioKeyReleased
        if(txtNombreServicio.getText().length()>20){
             txtNombreServicio.setText(txtNombreServicio.getText().substring(0, 20));
        }
    }//GEN-LAST:event_txtNombreServicioKeyReleased

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        char caracter = evt.getKeyChar();
        if((caracter < '0') ||(caracter > '9')){
            if(caracter<'.'||caracter>'.'){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void txtFechaInicio3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaInicio3KeyReleased
        if(txtFechaInicio3.getText().length()>3){
              txtFechaInicio3.setText(txtFechaInicio3.getText().substring(0, 4));
        }
    }//GEN-LAST:event_txtFechaInicio3KeyReleased

    private void txtFechaTermino3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaTermino3KeyReleased
        if(txtFechaTermino3.getText().length()>3){
              txtFechaTermino3.setText(txtFechaTermino3.getText().substring(0, 4));
        }
    }//GEN-LAST:event_txtFechaTermino3KeyReleased

    private void txtFechaInicio2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaInicio2KeyReleased
        if(txtFechaInicio2.getText().length()>1){
              txtFechaInicio2.setText(txtFechaInicio2.getText().substring(0, 2));
              if(Integer.parseInt(txtFechaInicio2.getText())<0||Integer.parseInt(txtFechaInicio2.getText())>12){
                  txtFechaInicio2.setText("12");
              }
              if(txtFechaInicio2.getText().length()==1){
                  if(Integer.parseInt(txtFechaInicio1.getText())<1||Integer.parseInt(txtFechaInicio1.getText())>maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))){
                      txtFechaInicio1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))));
                  }
              }
        }
    }//GEN-LAST:event_txtFechaInicio2KeyReleased

    private void txtFechaTermino2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaTermino2KeyReleased
        if(txtFechaTermino2.getText().length()>1){
              txtFechaTermino2.setText(txtFechaTermino2.getText().substring(0, 2));
              if(Integer.parseInt(txtFechaTermino2.getText())<1||Integer.parseInt(txtFechaTermino2.getText())>12){
                  txtFechaTermino2.setText("12");
              }
              if(txtFechaTermino2.getText().length()==1){
                  if(Integer.parseInt(txtFechaTermino1.getText())<1||Integer.parseInt(txtFechaTermino1.getText())>maximodia(Integer.parseInt(txtFechaTermino2.getText()),Integer.parseInt(txtFechaTermino3.getText()))){
                      txtFechaTermino1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaTermino2.getText()),Integer.parseInt(txtFechaTermino3.getText()))));
                  }
              }
        }
    }//GEN-LAST:event_txtFechaTermino2KeyReleased

    private void txtFechaInicio1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaInicio1KeyReleased
        if(txtFechaInicio1.getText().length()>1){
              txtFechaInicio1.setText(txtFechaInicio1.getText().substring(0, 2));
              if(recorrer(txtFechaInicio2.getText())){
                  if(Integer.parseInt(txtFechaInicio1.getText())<1||Integer.parseInt(txtFechaInicio1.getText())>maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))){
                      txtFechaInicio1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))));
                  }
              }
        }
    }//GEN-LAST:event_txtFechaInicio1KeyReleased

    private void txtFechaTermino1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaTermino1KeyReleased
        if(txtFechaTermino1.getText().length()>1){
              txtFechaTermino1.setText(txtFechaTermino1.getText().substring(0, 2));
        }
    }//GEN-LAST:event_txtFechaTermino1KeyReleased

    private void txtFechaInicio2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaInicio2FocusLost
        if(recorrer(txtFechaInicio2.getText())){
            if(recorrer(txtFechaInicio1.getText())){
                if(recorrer(txtFechaInicio3.getText())){
                      if(Integer.parseInt(txtFechaInicio1.getText())<1||Integer.parseInt(txtFechaInicio1.getText())>maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))){
                          txtFechaInicio1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))));
                      }
                }
            }
        }
    }//GEN-LAST:event_txtFechaInicio2FocusLost

    private void txtFechaTermino2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaTermino2FocusLost
        if(recorrer(txtFechaTermino2.getText())){
            if(recorrer(txtFechaTermino1.getText())){
                if(recorrer(txtFechaTermino3.getText())){
                   if(Integer.parseInt(txtFechaTermino1.getText())<1||Integer.parseInt(txtFechaTermino1.getText())>maximodia(Integer.parseInt(txtFechaTermino2.getText()),Integer.parseInt(txtFechaTermino3.getText()))){
                       txtFechaTermino1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaTermino2.getText()),Integer.parseInt(txtFechaTermino3.getText()))));
                   }
                }
            }
        }
    }//GEN-LAST:event_txtFechaTermino2FocusLost

    private void txtEntradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntradaKeyReleased
        if(txtEntrada.getText().length()>5){
              txtEntrada.setText(txtEntrada.getText().substring(0, 5));
        }
        if(txtEntrada.getText().length()>=2){
            if(txtEntrada.getText().length()==2){
                if(Integer.parseInt(txtEntrada.getText())<1||Integer.parseInt(txtEntrada.getText())>12){
                    txtEntrada.setText("12"+":");}
                else
                    txtEntrada.setText(txtEntrada.getText()+":");
            }
            else{
               txtEntrada.setText(txtEntrada.getText().substring(0,2)+":"+txtEntrada.getText().substring(3,txtEntrada.getText().length()));
            }
        }
        if(txtEntrada.getText().length()>3){
            if(Integer.parseInt(txtEntrada.getText().substring(3,txtEntrada.getText().length()))>60||Integer.parseInt(txtEntrada.getText().substring(3,txtEntrada.getText().length()))<0){
                txtEntrada.setText(txtEntrada.getText().substring(0,2)+":"+"59");
            }
        }
    }//GEN-LAST:event_txtEntradaKeyReleased

    private void txtSalidaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalidaKeyReleased
        if(txtSalida.getText().length()>5){
              txtSalida.setText(txtSalida.getText().substring(0, 5));
        }
        if(txtSalida.getText().length()>=2){
            if(txtSalida.getText().length()==2){
                if(Integer.parseInt(txtSalida.getText())<1||Integer.parseInt(txtSalida.getText())>12){
                    txtSalida.setText("12"+":");}
                else
                    txtSalida.setText(txtSalida.getText()+":");
            }
            else{
               txtSalida.setText(txtSalida.getText().substring(0,2)+":"+txtSalida.getText().substring(3,txtSalida.getText().length()));
            }
        }
        if(txtSalida.getText().length()>3){
            if(Integer.parseInt(txtSalida.getText().substring(3,txtSalida.getText().length()))>60||Integer.parseInt(txtSalida.getText().substring(3,txtSalida.getText().length()))<0){
                txtSalida.setText(txtSalida.getText().substring(0,2)+":"+"59");
            }
        }
    }//GEN-LAST:event_txtSalidaKeyReleased

    private void txtEntradaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntradaKeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtEntradaKeyTyped

    private void txtSalidaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalidaKeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtSalidaKeyTyped

    private void txtFechaInicio1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaInicio1FocusLost
        if(recorrer(txtFechaInicio2.getText())){
            if(recorrer(txtFechaInicio1.getText())){
                if(recorrer(txtFechaInicio3.getText())){
                      if(Integer.parseInt(txtFechaInicio1.getText())<1||Integer.parseInt(txtFechaInicio1.getText())>maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))){
                          txtFechaInicio1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))));
                      }
                }
            }
        }
    }//GEN-LAST:event_txtFechaInicio1FocusLost

    private void txtFechaTermino1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaTermino1FocusLost
        if(recorrer(txtFechaTermino2.getText())){
            if(recorrer(txtFechaTermino1.getText())){
                if(recorrer(txtFechaTermino3.getText())){
                   if(Integer.parseInt(txtFechaTermino1.getText())<1||Integer.parseInt(txtFechaTermino1.getText())>maximodia(Integer.parseInt(txtFechaTermino2.getText()),Integer.parseInt(txtFechaTermino3.getText()))){
                       txtFechaTermino1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaTermino2.getText()),Integer.parseInt(txtFechaTermino3.getText()))));
                   }
                }
            }
        }
    }//GEN-LAST:event_txtFechaTermino1FocusLost

    private void txtFechaInicio3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaInicio3FocusLost
        if(recorrer(txtFechaInicio2.getText())){
            if(recorrer(txtFechaInicio1.getText())){
                if(recorrer(txtFechaInicio3.getText())){
                      if(Integer.parseInt(txtFechaInicio1.getText())<1||Integer.parseInt(txtFechaInicio1.getText())>maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))){
                          txtFechaInicio1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaInicio2.getText()),Integer.parseInt(txtFechaInicio3.getText()))));
                      }
                }
            }
        }
    }//GEN-LAST:event_txtFechaInicio3FocusLost

    private void txtFechaTermino3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaTermino3FocusLost
         if(recorrer(txtFechaTermino2.getText())){
            if(recorrer(txtFechaTermino1.getText())){
                if(recorrer(txtFechaTermino3.getText())){
                   if(Integer.parseInt(txtFechaTermino1.getText())<1||Integer.parseInt(txtFechaTermino1.getText())>maximodia(Integer.parseInt(txtFechaTermino2.getText()),Integer.parseInt(txtFechaTermino3.getText()))){
                       txtFechaTermino1.setText(String.valueOf(maximodia(Integer.parseInt(txtFechaTermino2.getText()),Integer.parseInt(txtFechaTermino3.getText()))));
                   }
                }
            }
        }
    }//GEN-LAST:event_txtFechaTermino3FocusLost

    private void btnHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHorarioActionPerformed
        Insertar_Horarios x = new Insertar_Horarios();
        x.setVisible(true);
    }//GEN-LAST:event_btnHorarioActionPerformed

    private void txtFechaInicio2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaInicio2KeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtFechaInicio2KeyTyped

    private void txtPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyReleased
        int c=0;
        String texto=txtPrecio.getText();
        if(texto.length()!=0){
            for(int i=0;i<texto.length();i++){
                if(texto.charAt(i)=='.'){
                    c++;
                }
            }
            if(c==2){
                txtPrecio.setText(texto.substring(0,texto.length()-1));
            }
            if(c>2){
                for(int j=1;j<c;j++){
                    txtPrecio.setText(texto.substring(0,texto.length()-1));
                    texto=txtPrecio.getText();
                }
            }
            if(texto.charAt(0)=='.'){
                txtPrecio.setText("0"+texto);
            }
        }
    }//GEN-LAST:event_txtPrecioKeyReleased

    private void txtFechaInicio1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaInicio1KeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtFechaInicio1KeyTyped

    private void txtFechaInicio3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaInicio3KeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtFechaInicio3KeyTyped

    private void txtFechaTermino1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaTermino1KeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtFechaTermino1KeyTyped

    private void txtFechaTermino3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaTermino3KeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtFechaTermino3KeyTyped

    private void txtFechaTermino2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaTermino2KeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtFechaTermino2KeyTyped

    private void txtMatriculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyTyped
        char caracter = evt.getKeyChar();
        if((caracter < '0') ||(caracter > '9')){
            if(caracter<'.'||caracter>'.'){
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtMatriculaKeyTyped

    private void txtMatriculaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyReleased
        int c=0;
        String texto=txtPrecio.getText();
        if(texto.length()!=0){
            for(int i=0;i<texto.length();i++){
                if(texto.charAt(i)=='.'){
                    c++;
                }
            }
            if(c==2){
                txtPrecio.setText(texto.substring(0,texto.length()-1));
            }
            if(c>2){
                for(int j=1;j<c;j++){
                    txtPrecio.setText(texto.substring(0,texto.length()-1));
                    texto=txtPrecio.getText();
                }
            }
            if(texto.charAt(0)=='.'){
                txtPrecio.setText("0"+texto);
            }
        }
    }//GEN-LAST:event_txtMatriculaKeyReleased

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    Insertar_Ciclo_Cursos x = new Insertar_Ciclo_Cursos();
    x.setVisible(true);
}//GEN-LAST:event_jButton1ActionPerformed

    public void bloqueoNumeros(java.awt.event.KeyEvent evt){
        char caracter = evt.getKeyChar();
      if((caracter < '0') ||(caracter > '9')){}
      else{
        evt.consume();
      }
    }
    public void bloqueoLetras(java.awt.event.KeyEvent evt){
        char caracter = evt.getKeyChar();
      if((caracter < '0') ||(caracter > '9'))
          evt.consume();
    }
    public String registrarAcademico(){
        String codigo=null;
        try {
           double pago=Double.parseDouble(txtPrecio.getText());
           double matricula=Double.parseDouble(txtMatricula.getText());
           String nombre = txtNombreServicio.getText();
           String fechaI = txtFechaInicio3.getText()+"-"+txtFechaInicio2.getText()+"-"+txtFechaInicio1.getText();
           String fechaT = txtFechaTermino3.getText()+"-"+txtFechaTermino2.getText()+"-"+txtFechaTermino1.getText();
           CallableStatement cst = con.prepareCall("{call usp_InsertarCicloAcademico(?,?,?,?,?,?)}");
           cst.setDouble(1,pago);
           cst.setDouble(2,matricula);
           cst.setString(3,nombre);
           cst.setString(4,fechaI);
           cst.setString(5,fechaT);
           cst.registerOutParameter(6, Types.CHAR);
           int rpta = cst.executeUpdate();
           codigo = cst.getString(6);
           cst.close();                   
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Error al Registrar el Servicio Academico","ERROR",JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Insertar_Servicio.class.getName()).log(Level.SEVERE, null, ex);}
        return codigo;
    }
    public boolean registrarSalones(String codigo, int fila){
            boolean respuesta=false;
            try{
               CallableStatement cst;
               cst = con.prepareCall("{call usp_InsertarSalonesAcademia(?,?)}");
               cst.setString(1,codigo);
               cst.setString(2,String.valueOf(tblSalon.getValueAt(fila, 0)));
               int rpta = cst.executeUpdate();
               cst.close();
                if(rpta==1){
                     respuesta=true;
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(this,"Error al guardar el salon: "+fila,"Error",JOptionPane.ERROR_MESSAGE);
            }
            return respuesta;
    }
    public void registrarAsesoria(){
       
        try {
            double pago=Double.parseDouble(txtPrecio.getText());
            double matricula=Double.parseDouble(txtMatricula.getText());
            String nivelAcademico= String.valueOf(String.valueOf(cbxNivelAcademico.getSelectedItem()).charAt(0));
            String horaentrada=establecerHora(txtEntrada.getText().substring(0, 2),txtEntrada.getText().substring(3,5),cbxEntrada.getSelectedIndex());
            String horasalida=establecerHora(txtSalida.getText().substring(0, 2),txtSalida.getText().substring(3,5),cbxSalida.getSelectedIndex());
            CallableStatement cst = con.prepareCall("{call usp_InsertarServicioAsesoria(?,?,?,?,?,?)}");
            cst.setDouble(1,pago);
            cst.setDouble(2,matricula);
            cst.setString(3,nivelAcademico);
            cst.setString(4,horaentrada);
            cst.setString(5,horasalida);
            cst.registerOutParameter(6, Types.CHAR);
            int rpta1 = cst.executeUpdate();
            String codigosServicio = cst.getString(6);
            if(rpta1==1){
                JOptionPane.showMessageDialog(this,"Se ha registrado correctamente","Informacion",JOptionPane.INFORMATION_MESSAGE);
            }
            cst.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Error al Registrar el Servicio Asesoria","ERROR",JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Insertar_Servicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     public String establecerHora(String hora,String hora2, int cbx){
        String horadevuelta=null;
        switch(cbx){
            case 0:if(Integer.parseInt(hora)==12){
                        horadevuelta="00:"+hora2;
                    }
                    else{
                        horadevuelta=hora+":"+hora2;
                    }break;
            case 1: if(Integer.parseInt(hora)==12){
                         horadevuelta="12:"+hora2;
                    }
                    else{
                        horadevuelta=String.valueOf(Integer.parseInt(hora)+12);
                        if(horadevuelta.length()==1){
                            horadevuelta="0"+horadevuelta+":"+hora2;
                        }
                        else{
                            horadevuelta=horadevuelta+":"+hora2;
                        }
                    }break;
        }
        return horadevuelta;
    }
    public boolean verificarCampos(boolean verificar){
        switch(cbxServicio.getSelectedIndex()){
            case 1: verificar=verificar&&recorrer(txtNombreServicio.getText());
                    verificar=verificar&&recorrer(txtPrecio.getText());
                    verificar=verificar&&recorrer(txtMatricula.getText());
                    verificar=verificar&&recorrer(txtFechaInicio3.getText());
                    verificar=verificar&&recorrer(txtFechaInicio2.getText());
                    verificar=verificar&&recorrer(txtFechaInicio1.getText());
                    verificar=verificar&&recorrer(txtFechaTermino3.getText());
                    verificar=verificar&&recorrer(txtFechaTermino2.getText());
                    verificar=verificar&&recorrer(txtFechaTermino1.getText());break;
            case 2: verificar=verificar&&recorrer(txtPrecio.getText());
                    verificar=verificar&&recorrer(txtMatricula.getText());
                    if(cbxNivelAcademico.getSelectedIndex()==0){
                        verificar=false;
                    }
                    break;
        }
        
        return verificar;
    }
    public boolean recorrer(String c){
        boolean v=true;
        int contador=0;
        if(c.length()==0){
            v=false;
        }
        else{
            for(int i=0;i<c.length();i++){
                if(c.charAt(i)==' '){
                    contador++;
                }
            }
            if(contador==c.length()){
                v=false;
            }
        }
        return v;
    }
    public int maximodia(int mes,int año){
        int maximo=0;
        switch(mes){
            case 1:
            case 3:
            case 5:
            case 7:
            case 8:
            case 10:
            case 12: maximo=31; break;
            case 2: if(año%4==0)
                      maximo=29;
                    else
                      maximo=28;
                    break;
            case 4:
            case 6:
            case 9:
            case 11:maximo=30;break;
        }
        return maximo;
    }
public void componentesvisibles(boolean Inicio,boolean Academia,boolean Asesoria){
    lblServicio.setVisible(Inicio||Academia||Asesoria);
    cbxServicio.setVisible(Inicio||Academia||Asesoria);
    txtNombreServicio.setVisible(Academia);
    lblEj.setVisible(Academia);
    lblPrecio.setVisible(Academia||Asesoria);
    txtPrecio.setVisible(Academia||Asesoria);
    lblNivelAcademico.setVisible(Asesoria);
    cbxNivelAcademico.setVisible(Asesoria);
    lblFechaInicio.setVisible(Academia);
    txtFechaInicio3.setVisible(Academia);
    txtFechaInicio2.setVisible(Academia);
    txtFechaInicio1.setVisible(Academia);
    lblFechaTermino.setVisible(Academia);
    txtFechaTermino3.setVisible(Academia);
    txtFechaTermino2.setVisible(Academia);
    txtFechaTermino1.setVisible(Academia);
    lblSalon.setVisible(Academia);
    sclSalon.setVisible(Academia);
    tblSalon.setVisible(Academia);
    btnSeleccionar.setVisible(Academia);
    btnRegistrar.setVisible(Academia||Asesoria);
    lblNombreCiclo.setVisible(Academia);
    lblEntrada.setVisible(Asesoria);
    lblSalida.setVisible(Asesoria);
    txtEntrada.setVisible(Asesoria);
    txtSalida.setVisible(Asesoria);
    cbxEntrada.setVisible(Asesoria);
    cbxSalida.setVisible(Asesoria);
    btnHorario.setVisible(Academia);
    lblMatricula.setVisible(Academia||Asesoria);
    txtMatricula.setVisible(Academia||Asesoria);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Insertar_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Insertar_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Insertar_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Insertar_Servicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Insertar_Servicio().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHorario;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox cbxEntrada;
    private javax.swing.JComboBox cbxNivelAcademico;
    private javax.swing.JComboBox cbxSalida;
    private javax.swing.JComboBox cbxServicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLabel lblEj;
    private javax.swing.JLabel lblEntrada;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JLabel lblFechaTermino;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblNivelAcademico;
    private javax.swing.JLabel lblNombreCiclo;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblSalida;
    private javax.swing.JLabel lblSalon;
    private javax.swing.JLabel lblServicio;
    private javax.swing.JScrollPane sclSalon;
    private javax.swing.JTable tblSalon;
    private javax.swing.JTextField txtEntrada;
    private javax.swing.JTextField txtFechaInicio1;
    private javax.swing.JTextField txtFechaInicio2;
    private javax.swing.JTextField txtFechaInicio3;
    private javax.swing.JTextField txtFechaTermino1;
    private javax.swing.JTextField txtFechaTermino2;
    private javax.swing.JTextField txtFechaTermino3;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNombreServicio;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtSalida;
    // End of variables declaration//GEN-END:variables
}
