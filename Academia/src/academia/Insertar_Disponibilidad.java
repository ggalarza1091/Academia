package academia;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Insertar_Disponibilidad extends javax.swing.JFrame {
    DefaultTableModel disponibilidad = new DefaultTableModel();
    ImageIcon imagen = new ImageIcon("Icono.gif");
    Image icono = imagen.getImage();
    public Insertar_Disponibilidad() {
        initComponents();
        this.setIconImage(icono);
        this.setTitle("Insertar Disponibilidad");
        disponibilidad.addColumn("Dia");
        disponibilidad.addColumn("Hora");
        disponibilidad.addColumn("Entrada");
        disponibilidad.addColumn("Hora");
        disponibilidad.addColumn("Salida");
        tblDisponibilidad.setModel(disponibilidad);
        colocarDatos();
        setLocationRelativeTo(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        cbxDias = new javax.swing.JComboBox();
        txtHoraE = new javax.swing.JTextField();
        txtHoraS = new javax.swing.JTextField();
        cbxHoraE = new javax.swing.JComboBox();
        cbxHoraS = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisponibilidad = new javax.swing.JTable();
        btnBorrar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        cbxDias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo" }));
        cbxDias.setBounds(240, 100, 90, 31);
        jLayeredPane1.add(cbxDias, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtHoraE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHoraEKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHoraEKeyTyped(evt);
            }
        });
        txtHoraE.setBounds(430, 100, 50, 30);
        jLayeredPane1.add(txtHoraE, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtHoraS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHoraSKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHoraSKeyTyped(evt);
            }
        });
        txtHoraS.setBounds(430, 160, 50, 30);
        jLayeredPane1.add(txtHoraS, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cbxHoraE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "am", "pm" }));
        cbxHoraE.setBounds(500, 100, 60, 30);
        jLayeredPane1.add(cbxHoraE, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cbxHoraS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "am", "pm" }));
        cbxHoraS.setBounds(500, 160, 60, 30);
        jLayeredPane1.add(cbxHoraS, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Dia:");
        jLabel1.setBounds(200, 100, 50, 30);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setText("Hora Entrada:");
        jLabel2.setBounds(340, 100, 90, 30);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Hora Salida:");
        jLabel3.setBounds(350, 160, 80, 30);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        btnAgregar.setBounds(80, 140, 90, 40);
        jLayeredPane1.add(btnAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        btnCancelar.setBounds(80, 260, 90, 40);
        jLayeredPane1.add(btnCancelar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/Disponibilidad.png"))); // NOI18N
        jLabel4.setBounds(110, 20, 380, 40);
        jLayeredPane1.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tblDisponibilidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dia", "Hora Entrada", "Hora Salida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDisponibilidad.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblDisponibilidad);
        tblDisponibilidad.getColumnModel().getColumn(0).setResizable(false);
        tblDisponibilidad.getColumnModel().getColumn(1).setResizable(false);
        tblDisponibilidad.getColumnModel().getColumn(2).setResizable(false);

        jScrollPane1.setBounds(210, 210, 350, 170);
        jLayeredPane1.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });
        btnBorrar.setBounds(30, 200, 90, 40);
        jLayeredPane1.add(btnBorrar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        btnGuardar.setBounds(30, 320, 90, 40);
        jLayeredPane1.add(btnGuardar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/Fondos/7.jpg"))); // NOI18N
        jLabel5.setBounds(0, 0, 610, 410);
        jLayeredPane1.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHoraEKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraEKeyReleased
        if(txtHoraE.getText().length()>5){
              txtHoraE.setText(txtHoraE.getText().substring(0, 5));
        }
        if(txtHoraE.getText().length()>=2){
            if(txtHoraE.getText().length()==2){
                if(Integer.parseInt(txtHoraE.getText())<1||Integer.parseInt(txtHoraE.getText())>12){
                    txtHoraE.setText("12"+":");}
                else
                    txtHoraE.setText(txtHoraE.getText()+":");
            }
            else{
               txtHoraE.setText(txtHoraE.getText().substring(0,2)+":"+txtHoraE.getText().substring(3,txtHoraE.getText().length()));
            }
        }
        if(txtHoraE.getText().length()>3){
            if(Integer.parseInt(txtHoraE.getText().substring(3,txtHoraE.getText().length()))>60||Integer.parseInt(txtHoraE.getText().substring(3,txtHoraE.getText().length()))<0){
                txtHoraE.setText(txtHoraE.getText().substring(0,2)+":"+"59");
            }
        }
    }//GEN-LAST:event_txtHoraEKeyReleased

    private void txtHoraSKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraSKeyReleased
        if(txtHoraS.getText().length()>5){
              txtHoraS.setText(txtHoraS.getText().substring(0, 5));
        }
        if(txtHoraS.getText().length()>=2){
            if(txtHoraS.getText().length()==2){
                if(Integer.parseInt(txtHoraS.getText())<1||Integer.parseInt(txtHoraS.getText())>12){
                    txtHoraS.setText("12"+":");}
                else
                    txtHoraS.setText(txtHoraS.getText()+":");
            }
            else{
               txtHoraS.setText(txtHoraS.getText().substring(0,2)+":"+txtHoraS.getText().substring(3,txtHoraS.getText().length()));
            }
        }
        if(txtHoraS.getText().length()>3){
            if(Integer.parseInt(txtHoraS.getText().substring(3,txtHoraS.getText().length()))>60||Integer.parseInt(txtHoraS.getText().substring(3,txtHoraS.getText().length()))<0){
                txtHoraS.setText(txtHoraS.getText().substring(0,2)+":"+"59");
            }
        }
    }//GEN-LAST:event_txtHoraSKeyReleased

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if(verificar()){
            if(repetido()){
                Object dato[]=new Object[5];
                dato[0]=cbxDias.getSelectedItem();
                dato[1]=txtHoraE.getText();
                dato[2]=cbxHoraE.getSelectedItem();
                dato[3]=txtHoraS.getText();
                dato[4]=cbxHoraS.getSelectedItem();
                disponibilidad.addRow(dato);
                tblDisponibilidad.setModel(disponibilidad);
            }
            else{
                JOptionPane.showMessageDialog(this, "No se puede insertar dos veces un mismo dia","ERROR",JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Campos Vacios o mal llenados","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if(tblDisponibilidad.getSelectedRow()!=-1){
            disponibilidad.removeRow(tblDisponibilidad.getSelectedRow());
            tblDisponibilidad.setModel(disponibilidad);
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            FileWriter m = new FileWriter("Disponibilidad.txt");
            FileWriter f = new FileWriter("Disponibilidadextra.txt");
        } catch (IOException ex) {
            Logger.getLogger(Insertar_Disponibilidad.class.getName()).log(Level.SEVERE, null, ex);
        }
        try{
            FileWriter f = new FileWriter("Disponibilidadextra.txt",true);
            PrintWriter p = new PrintWriter(f);
            for(int i=0;i<tblDisponibilidad.getRowCount();i++){
                p.println("true,"+tblDisponibilidad.getValueAt(i,0) +","+tblDisponibilidad.getValueAt(i,1)+","+tblDisponibilidad.getValueAt(i,2)+","+tblDisponibilidad.getValueAt(i,3)+","+tblDisponibilidad.getValueAt(i,4)+",");
            }
            p.close();
        }catch (IOException ex) {
            Logger.getLogger(Insertar_Disponibilidad.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            String horaE;
            String horaS;
            int cbxE=0;
            int cbxS=0;
            FileWriter f = new FileWriter("Disponibilidad.txt",true);
            PrintWriter p = new PrintWriter(f);
            for(int i=0;i<tblDisponibilidad.getRowCount();i++){
                horaE=String.valueOf(tblDisponibilidad.getValueAt(i,1));
                horaS=String.valueOf(tblDisponibilidad.getValueAt(i,3));
                if(String.valueOf(tblDisponibilidad.getValueAt(i,2)).equalsIgnoreCase("am")){
                    cbxE=0;
                }
                if(String.valueOf(tblDisponibilidad.getValueAt(i,2)).equalsIgnoreCase("pm")){
                    cbxE=1;
                }
                if(String.valueOf(tblDisponibilidad.getValueAt(i,4)).equalsIgnoreCase("am")){
                    cbxS=0;
                }
                if(String.valueOf(tblDisponibilidad.getValueAt(i,4)).equalsIgnoreCase("pm")){
                    cbxS=1;
                }
            p.println("true,"+tblDisponibilidad.getValueAt(i,0) +","+establecerHora(horaE.substring(0, 2),horaE.substring(3,5),cbxE)+","+establecerHora(horaS.substring(0, 2),horaS.substring(3,5),cbxS)+",");
            }
            p.close();
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(Insertar_Disponibilidad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtHoraEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraEKeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtHoraEKeyTyped

    private void txtHoraSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraSKeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtHoraSKeyTyped
    public void bloqueoLetras(java.awt.event.KeyEvent evt){
        char caracter = evt.getKeyChar();
      if((caracter < '0') ||(caracter > '9'))
          evt.consume();
    }
    public int ampm(String s){
        int num=-1;
        if(s.equalsIgnoreCase("am")){
            num=0;
        }
        if(s.equalsIgnoreCase("pm")){
            num=1;
        }
        return num;
    }
    public boolean repetido(){
        boolean v=true,aux=true,aux1=true;
        outerloop:
            for(int i=0;i<tblDisponibilidad.getRowCount();i++){
                if(String.valueOf(cbxDias.getSelectedItem()).equalsIgnoreCase(String.valueOf(tblDisponibilidad.getValueAt(i,0)))){
                    v=false;
                }
                if(v==false){
                    break outerloop;
                }
            }
        return v;
    }
    
    public String establecerHora(String hora,String hora2, int cbx){
        String horadevuelta=null;
        switch(cbx){
            case 0:if(Integer.parseInt(hora)==12){
                        horadevuelta="00:"+hora2;
                    }
                    else{
                        horadevuelta=hora+":"+hora2;
                    }break;
            case 1: if(Integer.parseInt(hora)==12){
                         horadevuelta="12:"+hora2;
                    }
                    else{
                        horadevuelta=String.valueOf(Integer.parseInt(hora)+12);
                        if(horadevuelta.length()==1){
                            horadevuelta="0"+horadevuelta+":"+hora2;
                        }
                        else{
                            horadevuelta=horadevuelta+":"+hora2;
                        }
                    }break;
        }
        return horadevuelta;
    }
    public boolean verificar(){
        boolean verificacion=true;
        if(cbxDias.getSelectedIndex()==0){
            verificacion=false;
        }
        verificacion=verificacion&&recorrer(txtHoraE.getText());
        verificacion=verificacion&&recorrer(txtHoraS.getText());
        if(txtHoraE.getText().length()!=5||txtHoraS.getText().length()!=5){
            verificacion=false;
        }
        return verificacion;
    }
    public boolean recorrer(String c){
        boolean v=true;
        int contador=0;
        if(c.length()==0){
            v=false;
        }
        else{
            for(int i=0;i<c.length();i++){
                if(c.charAt(i)==' '){
                    contador++;
                }
            }
            if(contador==c.length()){
                v=false;
            }
        }
        return v;
    }
    public void colocarDatos(){
        try {
            String linea;
            FileReader f = new FileReader("Disponibilidadextra.txt");
            BufferedReader b = new BufferedReader(f);
            while((linea=b.readLine())!=null){
                StringTokenizer t = new StringTokenizer(linea,",");
                if(Boolean.valueOf(t.nextToken())){
                    Object dato[] = new Object[5];    
                    dato[0]=t.nextToken();
                    dato[1]=t.nextToken();
                    dato[2]=t.nextToken();
                    dato[3]=t.nextToken();
                    dato[4]=t.nextToken();
                    disponibilidad.addRow(dato);
                }
                else{
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                }
            }
            tblDisponibilidad.setModel(disponibilidad);
            b.close();
        }
        catch(IOException ex){JOptionPane.showMessageDialog(this, "no hay archivo","ERROR",JOptionPane.ERROR_MESSAGE);}
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Insertar_Disponibilidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Insertar_Disponibilidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Insertar_Disponibilidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Insertar_Disponibilidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Insertar_Disponibilidad().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox cbxDias;
    private javax.swing.JComboBox cbxHoraE;
    private javax.swing.JComboBox cbxHoraS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDisponibilidad;
    private javax.swing.JTextField txtHoraE;
    private javax.swing.JTextField txtHoraS;
    // End of variables declaration//GEN-END:variables
}
