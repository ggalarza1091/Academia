package academia;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.*;
import java.util.Calendar;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class Alta_Administrativo extends javax.swing.JFrame {
 Connection con;
    ImageIcon imagen = new ImageIcon("Icono.gif");
    Image icono = imagen.getImage();
    Calendar c = Calendar.getInstance();
    String A,M,D;
    public Alta_Administrativo() {
        initComponents();
        this.setTitle("Dar Alta - Administrativos");
        this.setIconImage(icono);
        try {
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con=DriverManager.getConnection("jdbc:odbc:conexion");
            Datos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"ERROR EN LA CONEXION","ERROR",JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Insertar_Salones.class.getName()).log(Level.SEVERE, null, ex);
        }
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlta = new javax.swing.JTable();
        cbxMes = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        txtAno = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tblAlta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Apellido Pat", "Apellido Mat", "Fecha de Salida", "Cargo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAlta.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblAlta);
        tblAlta.getColumnModel().getColumn(0).setResizable(false);
        tblAlta.getColumnModel().getColumn(1).setResizable(false);
        tblAlta.getColumnModel().getColumn(2).setResizable(false);
        tblAlta.getColumnModel().getColumn(3).setResizable(false);
        tblAlta.getColumnModel().getColumn(4).setResizable(false);
        tblAlta.getColumnModel().getColumn(5).setResizable(false);

        jScrollPane1.setBounds(40, 190, 730, 307);
        jLayeredPane1.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cbxMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Mes", "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        cbxMes.setBounds(130, 130, 110, 30);
        jLayeredPane1.add(cbxMes, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setText("Fecha de Ingreso:");
        jLabel1.setBounds(20, 140, 88, 14);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAnoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnoKeyTyped(evt);
            }
        });
        txtAno.setBounds(250, 130, 80, 30);
        jLayeredPane1.add(txtAno, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(340, 130, 80, 30);
        jLayeredPane1.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton2.setText("Dar de Alta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setBounds(530, 130, 87, 40);
        jLayeredPane1.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.setBounds(670, 130, 80, 40);
        jLayeredPane1.add(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/AltaAdministrativo.png"))); // NOI18N
        jLabel2.setBounds(100, 40, 620, 80);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/Fondos/1.jpg"))); // NOI18N
        jLabel3.setBounds(0, 0, 800, 530);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       if(verificar()){
            buscarDatos();
       }
       else{
           Datos();
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(tblAlta.getSelectedRow()!=-1){
            modificarAdministrativo();
       }
       else{
           JOptionPane.showMessageDialog(this,"Seleccione una fila","ERROR",JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtAnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoKeyTyped
        bloqueoLetras(evt);
    }//GEN-LAST:event_txtAnoKeyTyped

    private void txtAnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoKeyReleased
        if(txtAno.getText().length()>3){
             txtAno.setText(txtAno.getText().substring(0, 4));
        }
    }//GEN-LAST:event_txtAnoKeyReleased
    public void bloqueoLetras(java.awt.event.KeyEvent evt){
        char caracter = evt.getKeyChar();
        if((caracter < '0') ||(caracter > '9'))
            evt.consume();
    }
    public void modificarAdministrativo(){
        try {
            String linea;
            FileReader m = new FileReader("AltaAdmi.txt");
            BufferedReader b = new BufferedReader(m);
            while((linea=b.readLine())!=null){
                StringTokenizer t = new StringTokenizer(linea,"=");
                if(String.valueOf(tblAlta.getValueAt(tblAlta.getSelectedRow(),0)).equalsIgnoreCase(String.valueOf(t.nextToken()))){
                    try{
                        D=Integer.toString(c.get(Calendar.DATE));
                        M=Integer.toString(c.get(Calendar.MONTH)+1);
                        A=Integer.toString(c.get(Calendar.YEAR));
                        String codigo = String.valueOf(tblAlta.getValueAt(tblAlta.getSelectedRow(),0));
                        String nombre = String.valueOf(t.nextToken());
                        String apelpat= String.valueOf(t.nextToken());
                        String apelmat= String.valueOf(t.nextToken());
                        String direccion= String.valueOf(t.nextToken());
                        String celular= String.valueOf(t.nextToken());
                        String correo= String.valueOf(t.nextToken());
                        String metodopago=String.valueOf(t.nextToken());
                        System.out.println(t.nextToken());
                        System.out.println(t.nextToken());
                        String fechaingreso=A+"-"+M+"-"+D;
                        String rucoefectivo=String.valueOf(t.nextToken());
                        String fechanac= String.valueOf(t.nextToken());
                        String pago = String.valueOf(t.nextToken());
                        System.out.println(pago);
                        String cargo = String.valueOf(t.nextToken());
                        if(metodopago.equalsIgnoreCase("E")) {
                            rucoefectivo=null;
                        }
                            CallableStatement cst = con.prepareCall("{call usp_ActualizarColaboradorFuncional(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");
                            cst.setString(1,codigo);
                            cst.setBoolean(2,true);
                            cst.setString(3,null);
                            cst.setString(4,nombre);
                            cst.setString(5,apelpat);
                            cst.setString(6,apelmat);
                            cst.setString(7,direccion);
                            cst.setString(8,celular);
                            cst.setString(9,correo);
                            cst.setString(10,metodopago);
                            cst.setString(11,fechaingreso);
                            cst.setString(12,rucoefectivo);
                            cst.setString(13,fechanac);
                            cst.setDouble(14,Double.parseDouble(pago));
                            cst.setString(15,cargo);
                            int rpta = cst.executeUpdate();
                            if(rpta==1){
                                JOptionPane.showMessageDialog(this,"Se ha dado de Alta Correctamente","Informacion",JOptionPane.INFORMATION_MESSAGE);
                                Datos();
                            }
                            cst.close();
                     } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this,"ERROR AL DAR EL ALTA","ERROR",JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(Academia.class.getName()).log(Level.SEVERE, null, ex);}
                }
                else{
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                    System.out.println(t.nextToken());
                }
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this,"PERSONA NO ENCONTRADA EN EL ARCHIVO","ERROR",JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Alta_Administrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void buscarDatos(){
        try {
            FileWriter m = new FileWriter("AltaAdmi.txt");
            PrintWriter l = new PrintWriter(m);
            l.close();
        } catch (IOException ex) {
            Logger.getLogger(Alta_Administrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel alta = new DefaultTableModel();
        try {
            alta.addColumn("Codigo");
            alta.addColumn("Nombre");
            alta.addColumn("Apellido Pat");
            alta.addColumn("Apellido Mat");
            alta.addColumn("Fecha Salida");
            alta.addColumn("Cargo");
            CallableStatement cst = con.prepareCall("{call usp_ListaFuncionalInactivos}");
            ResultSet r=cst.executeQuery();
            while(r.next()){
                int j=0;
                Object dato[] = new Object[6];
                Object datoaux[] = new Object[14]; 
                boolean v=false;
                FileWriter f = new FileWriter("AltaAdmi.txt",true);
                PrintWriter p = new PrintWriter(f);
                for(int i=0;i<14;i++){
                    datoaux[i]=borrarespacios(r.getString(i+1));
                    if(i==8){
                        String fecha=String.valueOf(datoaux[i]);
                        if(Integer.parseInt(fecha.substring(3,5))==obtenermes(String.valueOf(cbxMes.getSelectedItem()))){
                            if(Integer.parseInt(fecha.substring(6,10))==Integer.parseInt(txtAno.getText()))
                                v=true;
                        }
                    }
                    if(i==0||i==1||i==2||i==3||i==8||i==13){
                        dato[j]=datoaux[i];
                        j++;
                    }
                }
                if(v){
                    alta.addRow(dato);
                    p.println(datoaux[0]+"="+datoaux[1]+"="+datoaux[2]+"="+datoaux[3]+"="+datoaux[4]+"="+datoaux[5]+"="+datoaux[6]+"="+datoaux[7]+"="+datoaux[8]+"="+datoaux[9]+"="+datoaux[10]+"="+datoaux[11]+"="+datoaux[12]+"="+datoaux[13]+"=");
                }
                p.close();
            }
            this.tblAlta.setModel(alta);
            r.close();
            cst.close();
        } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al mostrar los datos","Error",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Insertar_Salones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public String borrarespacios(String c){
        String cadena=null;
        boolean pos = false;
        int posicion=0;
        if(c!=null){
            outerloop:
            for(int i=c.length()-1;i>=0;i--){
                if(c.charAt(i)!=' '){
                    posicion=i+1;
                    pos=true;
                    break outerloop;
                }
            }
            if(pos)
                cadena=c.substring(0,posicion);
            else
                cadena=c;
        }
        return cadena;
    }
    public void Datos(){
        try {
            FileWriter m = new FileWriter("AltaAdmi.txt");
            PrintWriter l = new PrintWriter(m);
            l.close();
        } catch (IOException ex) {
            Logger.getLogger(Alta_Administrativo.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            DefaultTableModel alta = new DefaultTableModel();
            alta.addColumn("Codigo");
            alta.addColumn("Nombre");
            alta.addColumn("Apellido Pat");
            alta.addColumn("Apellido Mat");
            alta.addColumn("Fecha Salida");
            alta.addColumn("Cargo");
            CallableStatement cst = con.prepareCall("{call usp_ListaFuncionalInactivos}");
            ResultSet r=cst.executeQuery();
            int j=0;
            while(r.next()){
                Object dato[] = new Object[6];
                Object datoaux[] = new Object[14];
                j=0;
                for(int i=0;i<14;i++){
                        datoaux[i]=borrarespacios(r.getString(i+1));
                    if(i==0||i==1||i==2||i==3||i==8||i==13){
                        dato[j]=datoaux[i];
                        j++;
                    }
                }
                alta.addRow(dato);
                FileWriter f = new FileWriter("AltaAdmi.txt",true);
                PrintWriter p = new PrintWriter(f);
                p.println(datoaux[0]+"="+datoaux[1]+"="+datoaux[2]+"="+datoaux[3]+"="+datoaux[4]+"="+datoaux[5]+"="+datoaux[6]+"="+datoaux[7]+"="+datoaux[8]+"="+datoaux[9]+"="+datoaux[10]+"="+datoaux[11]+"="+datoaux[12]+"="+datoaux[13]+"=");
                p.close();
            }
            this.tblAlta.setModel(alta);
            r.close();
            cst.close();
        } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al mostrar los datos","Error",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Insertar_Salones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public boolean verificar(){
        boolean v=true;
        v=v&recorrer(txtAno.getText());
        if(cbxMes.getSelectedIndex()==0){
            v=false;
        }
        return v;
    }
     public boolean recorrer(String c){
        boolean v=true;
        int contador=0;
        if(c.length()==0){
            v=false;
        }
        else{
            for(int i=0;i<c.length();i++){
                if(c.charAt(i)==' '){
                    contador++;
                }
            }
            if(contador==c.length()){
                v=false;
            }
        }
        return v;
    }
    public int obtenermes(String mes){
        int m=0;
        if(mes.equalsIgnoreCase("Enero")){m=1;}
        if(mes.equalsIgnoreCase("Febrero")){m=2;}
        if(mes.equalsIgnoreCase("Marzo")){m=3;}
        if(mes.equalsIgnoreCase("Abril")){m=4;}
        if(mes.equalsIgnoreCase("Mayo")){m=5;}
        if(mes.equalsIgnoreCase("Junio")){m=6;}
        if(mes.equalsIgnoreCase("Julio")){m=7;}
        if(mes.equalsIgnoreCase("Agosto")){m=8;}
        if(mes.equalsIgnoreCase("Septiembre")){m=9;}
        if(mes.equalsIgnoreCase("Octubre")){m=10;}
        if(mes.equalsIgnoreCase("Noviembre")){m=11;}
        if(mes.equalsIgnoreCase("Diciembre")){m=12;}
        return m;
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alta_Administrativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alta_Administrativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alta_Administrativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alta_Administrativo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Alta_Administrativo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxMes;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAlta;
    private javax.swing.JTextField txtAno;
    // End of variables declaration//GEN-END:variables
}
